name: Release
on:
  push:
    tags:
      - '*-release'
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    strategy:
      matrix:
        platform: [aws]
    runs-on: ${{ matrix.platform }}
    env:
      ENV: release
      PUBLIC_ECR_URL: public.ecr.aws/h4c6o7f8
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt

    - name: Prepare key
      shell: bash
      run: |
        tar -C ~/.ssh -zcf key.tar.gz ./
    - name: Clean garbage containers and images
      shell: bash
      run: |
        docker rm $(docker ps -a | grep -v "^CONTAINER" | awk '{print $1}') || true
        docker rmi -f $(docker images -f "dangling=true" -q) || true
    - name: Build rust base image
      shell: bash
      run: |
        make ci_build_binary_rust_base
    - name: Build binary image
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      shell: bash
      run: |
        echo "REF: ${GITHUB_REF}"
        TAGS=$(grep "refs/tags" <<< ${GITHUB_REF}) || true
        TAGV="${TAGS#refs/tags/}"
        export IMAGE_TAG="${TAGV:-main}"
        export VERGEN_SHA_EXTERN="${IMAGE_TAG}"
        echo "Image tag: ${IMAGE_TAG}"
        make ci_build_release_binary_image
 
    - name: Build images
      env:
        PRIVATE_ECR_URL: ${{ env.PRIVATE_ECR_URL }}
        PUBLIC_ECR_URL: ${{ env.PUBLIC_ECR_URL }}
        ENV: release
      shell: bash
      run: |
        echo "REF: ${GITHUB_REF}"
        TAGS=$(grep "refs/tags" <<< ${GITHUB_REF}) || true
        TAGV="${TAGS#refs/tags/}"
        export IMAGE_TAG="${TAGV:-main}"
        echo "Image tag: ${IMAGE_TAG}"
        make ci_build_image
    - name: Login ECR
      env:
        PUBLIC_ECR_URL: ${{ env.PUBLIC_ECR_URL }}
      shell: bash
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${PUBLIC_ECR_URL}
    - name: Push images
      env:
        PRIVATE_ECR_URL: ${{ env.PRIVATE_ECR_URL }}
        PUBLIC_ECR_URL: ${{ env.PUBLIC_ECR_URL }}
        ENV: release
      shell: bash
      run: |
        echo "REF: ${GITHUB_REF}"
        TAGS=$(grep "refs/tags" <<< ${GITHUB_REF}) || true
        TAGV="${TAGS#refs/tags/}"
        export IMAGE_TAG="${TAGV:-main}"
        echo "Image tag: ${IMAGE_TAG}"
        make ci_push_image
    - name: Clean images
      env:
        PRIVATE_ECR_URL: ${{ env.PRIVATE_ECR_URL }}
        PUBLIC_ECR_URL: ${{ env.PUBLIC_ECR_URL }}
        ENV: release
      shell: bash
      run: |
        echo "REF: ${GITHUB_REF}"
        TAGS=$(grep "refs/tags" <<< ${GITHUB_REF}) || true
        TAGV="${TAGS#refs/tags/}"
        export IMAGE_TAG="${TAGV:-main}"
        echo "Image tag: ${IMAGE_TAG}"
        make clean_image

    - name: Clean garbage
      shell: bash
      run: |
        rm -rf /tmp/*>/dev/null 2>&1 || true
